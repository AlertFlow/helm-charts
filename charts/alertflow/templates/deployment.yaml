apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "alertflow.fullname" . }}
  labels:
    {{- include "alertflow.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "alertflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "alertflow.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "alertflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: frontend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.frontend.repository }}:{{ .Values.frontend.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.frontend.service.target_port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.frontend.service.target_port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        - name: backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.repository }}:{{ .Values.backend.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /api/page/settings
              port: {{ .Values.backend.service.target_port }}
          readinessProbe:
            httpGet:
              path: /api/page/settings
              port: {{ .Values.backend.service.target_port }}
          env:
            - name: DB_PASS
              value: "{{ .Values.backend.env.DB_PASS }}"
            - name: DB_TABLE
              value: "{{ .Values.backend.env.DB_TABLE }}"
            - name: JWT_KEY
              value: "{{ .Values.backend.env.JWT_KEY }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        
        - name: database
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.database.image }}:{{ .Values.database.tag }}"
          imagePullPolicy: {{ .Values.database.pullPolicy }}
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: alertflow-postgres-config
          {{- if not .Values.database.persistentVolume.enabled }}
          volumeMounts:
            - name: postgresdb
              mountPath: /var/lib/postgresql/data
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.database.persistentVolume.enabled }}
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: "{{ include "alertflow.fullname" . }}-postgres-pvc"
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
